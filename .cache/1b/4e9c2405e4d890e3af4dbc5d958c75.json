{"id":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","dependencies":[{"name":"/Users/mollydeangelis-jimenez/careerfoundry/movie_api/package.json","includedInParent":true,"mtime":1587683840976},{"name":"/Users/mollydeangelis-jimenez/careerfoundry/movie_api/client/.babelrc","includedInParent":true,"mtime":1587435329569},{"name":"/Users/mollydeangelis-jimenez/careerfoundry/movie_api/node_modules/babel-runtime/node_modules/core-js/package.json","includedInParent":true,"mtime":1585194050129}],"generated":{"js":"// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}}],"sources":{"../../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js":"// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n"},"lineCount":7}},"error":null,"hash":"48af8375a928c496a555d8e368f5015a","cacheData":{"env":{}}}